[zhu_2016_general]
  # Meant as a generalized option to the above model
  longref = "Zhu, J.;  Baise, L. G.; Thompson, E. M., 2016, An Updated Geospatial Liquefaction Model for Global Application, in review."
  shortref = 'Zhu and others (2016)'
  
  gfetype = liquefaction

  baselayer = vs30

  slopemin = 0. # in degrees
  slopemax = 5. # in degrees
  slopefile = global_gted_maxslope_30c.flt

  pgvmin = 3.0 # cm/s
  vs30max = 620 # m/s, redundant with slopemax?

  # Location of code corresponding to this model
  funcname = LogisticModel

  [[layers]]
    [[[vs30]]]
      file = global_vs30_mps.grd
      units = m/s
      longref = 'Computed from GMTED2010 using methods of Wald and Allen (2007) based on topographic slope'
      shortref = 'Wald and Allen (2007)'
    [[[precip]]]
      file = global_precip_fil_mm.grd
      units = millimeters
      longref = 'WorldClim database, http://WorldClim.org; last accessed March 2014'
      shortref = WorldClim
    [[[dc]]]
      file = global_dc_km.grd
      units = km
      longref = "Computed from a global dataset computed by NASA's Ocean Color Group, http://oceancolor.gsfc.nasa.gov/cms/DOCS/DistFromCoast; last accessed January 2014"
      shortref = 'NASA Ocean Color group'
    [[[dr]]]
      file = global_dr_km.grd
      units = km
      longref = 'Computed from HydroSHEDS database, http://hydrosheds.cr.usgs.gov/dataavail.php; last accessed February 2014'
      shortref = 'HydroSHEDS'
    [[[wtd]]]
      file = global_wtd_fil_na_m.grd
      units = m
      longref = 'Fan, Y., Li, H., and Miguez-Macho, G., 2013, Global Patterns of Groundwater Table Depth: Science, 339, 940-943.'
      shortref = 'Fan and others (2013)'

  [[interpolations]]
    vs30 = linear
    precip = linear
    dc = linear
    dr = linear
    wtd = linear

  [[terms]]
    b1 = log(pgv)
    b2 = log(vs30)
    b3 = precip
    b4 = "minimum(dc, dr)"
    b5 = wtd

  [[coefficients]]
    b0 = 8.801
    b1 = 0.334
    b2 = -1.918
    b3 = 0.0005408
    b4 = -0.2054
    b5 = -0.0333

  [[coverage]] # Compute areal coverage from probability
    eqn = '0.4915/(1 + 42.40 * np.exp(-9.165*P))**2' # not %

  [[display_options]]  # These only get used in mapping programs
    [[[lims]]]  # Optional
      # Corresponding to different possible layer keys - don't need these, will
      # just use defaults if missing don't need full name of layer, just 
      # something that is part of it
      model = 'np.linspace(0., 1.0, 11)'
      pga = None
      pgv = None
      dr = 'np.linspace(0., 10., 6.)'
      wtd = 'np.linspace(0., 30., 6.)'

    [[[colors]]]
      default = cm.CMRmap_r
      alpha = 0.7
      # Corresponding to different possible layer keys - don't need these, will
      # just use defaults if missing
      model = cm.CMRmap_r
      pga = cm.jet
      pgv = cm.jet

    [[[logscale]]]
      # Corresponding to different possible layer keys - don't need these, will
      # just use defaults if missing, don't need full name of layer, just 
      # something that is part of it
      model = False
      pga = False
      pgv = False

    [[[maskthresholds]]]
      # Corresponding to different possible layer keys - don't need these, will
      # just use defaults if missing, don't need full name of layer, just 
      # something that is part of it
      model = None
      pga = None
      pgv = None
